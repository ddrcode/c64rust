use crate::c64::*;
use super::asm_test;

#[test]
fn test_adc() { //                              NV1BDIZC
    asm_test(&[0xa9, 0x50, 0x69, 0x10], 0x60, 0b00110000);
    asm_test(&[0xa9, 0x50, 0x69, 0x50], 0xa0, 0b11110000);
    asm_test(&[0xa9, 0x50, 0x69, 0x90], 0xe0, 0b10110000);
    asm_test(&[0xa9, 0x50, 0x69, 0xd0], 0x20, 0b00110001);
    asm_test(&[0xa9, 0xd0, 0x69, 0x10], 0xe0, 0b10110000);
    asm_test(&[0xa9, 0xd0, 0x69, 0x50], 0x20, 0b00110001);
    asm_test(&[0xa9, 0xd0, 0x69, 0x90], 0x60, 0b01110001);
    asm_test(&[0xa9, 0xd0, 0x69, 0xd0], 0xa0, 0b10110001);
}

#[test]
fn test_sbc() {
    asm_test(&[0xa9, 0xf0, 0xe9, 0x07], 0xf0-0x07, 0b10110001);

    // scenarios from: https://www.righto.com/2012/12/the-6502-overflow-flag-explained.html
    //                                          NV1BDIZC
    asm_test(&[0xa9, 0x50, 0xe9, 0xf0], 0x60, 0b00110000);
    asm_test(&[0xa9, 0x50, 0xe9, 0xb0], 0xa0, 0b11110000);
    asm_test(&[0xa9, 0x50, 0xe9, 0x70], 0xe0, 0b10110000);
    asm_test(&[0xa9, 0x50, 0xe9, 0x30], 0x20, 0b00110001);
    asm_test(&[0xa9, 0xd0, 0xe9, 0xf0], 0xe0, 0b10110000);
    asm_test(&[0xa9, 0xd0, 0xe9, 0xb0], 0x20, 0b00110001);
    asm_test(&[0xa9, 0xd0, 0xe9, 0x70], 0x60, 0b01110001);
    asm_test(&[0xa9, 0xd0, 0xe9, 0x30], 0xa0, 0b10110001);
}

